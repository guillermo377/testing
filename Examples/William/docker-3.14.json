{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentSize": {
        	"type": "string",
        	"defaultValue": "Small",
       		"allowedValues": [
            	"Small",
           	    "Medium",
           		"Large"
            ]
        },
        "clusterPublicIPAddressLabel": {
            "type": "string",
            "metadata": {
                "description": "DNS name of the public IP address"
            }
        },
        "License": {
            "metadata": {
              "description": "Upload your Docker Enterprise Edition License Key"
            },
            "type": "securestring"
        },
        "dockerEEDownloadURL": {
            "type": "string",
            "metadata": {
                "description": "Location from where to Download Docker EE (Found in Docker Store)"
            }
        },
        "AdminUserid": {
            "type": "string",
            "metadata": {
                "description": "UserID of the virtual machines admin"
            }
        },
        "AdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password of Windows Workers"
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "The SSH public key used to authenticate with the created swarm. Usually available in $HOME/.ssh/id_rsa.pub file"
            }
        },
        "sshPrivateKey": {
            "type": "string",
            "metadata": {
                "description": "SSH RSA private key file as a base64 string."
            }
        },
        "aadClientId": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "Azure AD Client ID"
			}
		},
		"aadClientSecret": {
			"type": "securestring",
			"defaultValue": "",
			"metadata": {
				"description": "Azure AD Client Secret"
			}
		}
    },
    "variables": {
        "resourceGroupLocation": "[resourceGroup().location]",
        "resourceGroupName": "[resourceGroup().name]",
        "tenantId": "[subscription().tenantId]",
        "subscriptionId": "[subscription().subscriptionId]",
        "artifactBaseUri": "https://raw.githubusercontent.com/Zuldajri/DockerEE/master/",
        "singlequote": "'",
        "dockerEEDownloadURL": "[parameters('dockerEEDownloadURL')]",
        "apiVersion": "2016-03-30",
        "managerVMSize": "[variables(concat('sizing-', parameters('deploymentSize'))).managerVMSize]",
		"workerVMSize": "[variables(concat('sizing-', parameters('deploymentSize'))).workerVMSize]",
		"linuxWorkerCount": "[variables(concat('sizing-', parameters('deploymentSize'))).linuxWorkerCount]",
		"windowsWorkerCount": "[variables(concat('sizing-', parameters('deploymentSize'))).windowsWorkerCount]",
		"managerextraCount": "[variables(concat('sizing-', parameters('deploymentSize'))).managerextraCount]",
	    "sizing-Small":
	        {
                "managerVMSize": "Standard_D2s_v3",
                "workerVMSize": "Standard_D2s_v3",
                "linuxWorkerCount": 2,
                "windowsWorkerCount": 1,
                "managerextraCount": 1,
                "extramanager": "false"
    	    },
	    "sizing-Medium": 
        	{
                "managerVMSize": "Standard_D4s_v3",
                "workerVMSize": "Standard_D2s_v3",
                "linuxWorkerCount": 4,
                "windowsWorkerCount": 2,
                "managerextraCount": 1,
                "extramanager": "true"
    	    },
	    "sizing-Large": 
    	    {
                "managerVMSize": "Standard_D4s_v3",
                "workerVMSize": "Standard_D4s_v3",
                "linuxWorkerCount": 4,
                "windowsWorkerCount": 2,
                "managerextraCount": 1,
                "extramanager": "true"
            },
        "extramanager": "[variables(concat('sizing-', parameters('deploymentSize'))).extramanager]",    
        "storageAccountName": "[concat('diagstorage', uniqueString(resourceGroup().id))]",
        "diagstorageUri": "[concat('https://',variables('StorageAccountName'),'.blob.core.windows.net/')]",
        "virtualNetworkName": "clusterVirtualNetwork",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "dockersubnetRef": "[concat(variables('vnetID'),'/subnets/docker')]",
        "clusterUri":"[concat(variables('clusterPublicIPAddressLabel'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "ucpAvailabilitySetName": "ucpAvailabilitySet",
        "ucpPublicIPAddressLabel": "[concat('ucp',parameters('clusterPublicIPAddressLabel'))]",
        "ucpPublicIPAddressName": "ucpPublicIP",
        "ucpLbName": "ucpLoadBalancer",
        "ucpLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('ucpLbName'))]",
        "ucpLbFrontEndIPConfigID": "[concat(variables('ucpLbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
        "ucpLbBackendAddressPoolID": "[concat(variables('ucpLbID'),'/backendAddressPools/BackendServersPool')]",
        "ucpLbProbeID": "[concat(variables('ucpLbID'),'/probes/DockerDaemonProbe')]",
        "ucpUri":"[concat(variables('ucpPublicIPAddressLabel'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "ucpNicName": "ucpmanager",
        "linux-install-dockereeucp": "linux-install-dockereeucp.sh",
        "swarmMgrIP": "10.0.1.4",
        "dtrAvailabilitySetName": "dtrAvailabilitySet",
        "dtrPublicIPAddressLabel": "[concat('dtr',parameters('clusterPublicIPAddressLabel'))]",
        "dtrPublicIPAddressName": "dtrPublicIP",
        "dtrLbName": "dtrLoadBalancer",
        "dtrLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('dtrLbName'))]",
        "dtrLbFrontEndIPConfigID": "[concat(variables('dtrLbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
        "dtrLbBackendAddressPoolID": "[concat(variables('dtrLbID'),'/backendAddressPools/BackendServersPool')]",
        "dtrLbProbeID": "[concat(variables('dtrLbID'),'/probes/DockerDaemonProbe')]",
        "dtruri":"[concat(variables('dtrPublicIPAddressLabel'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "dtrNicName": "dtrManagerNIC",
        "clusterAvailabilitySetName": "clusterAvailabilitySet",
        "clusterPublicIPAddressLabel": "[parameters('clusterPublicIPAddressLabel')]",
        "clusterLbPublicIPAddressName": "clusterPublicIP",
        "clusterLbName": "clusterLoadBalancer",
        "clusterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('clusterLbName'))]",
        "clusterLbFrontEndIPConfigID": "[concat(variables('clusterLbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
        "clusterLbBackendAddressPoolID": "[concat(variables('clusterLbID'),'/backendAddressPools/BackendServersPool')]",
        "clusterLbProbeID": "[concat(variables('clusterLbID'),'/probes/DockerDaemonProbe')]",
        "linuxWorkerVMNamePrefix": "linuxWorker",
        "windowsWorkerVMNamePrefix": "winWorker",
        "AdminUserid": "[parameters('AdminUserid')]",
        "AdminPassword": "[parameters('AdminPassword')]",
        "sshKeyPath": "[concat('/home/', variables('AdminUserid'), '/.ssh/authorized_keys')]",
        "sshRSAPublicKey": "[parameters('sshPublicKey')]"
    },
    "resources": [
    {
        "apiVersion": "2017-10-01",
        "name": "[variables('storageAccountName')]",
        "location": "[variables('resourceGroupLocation')]",
        "type": "Microsoft.Storage/storageAccounts",
        "sku": { "name": "Standard_LRS" },
        "kind": "StorageV2",
        "properties": {
            "supportsHttpsTrafficOnly": false,
            "accessTier": "Hot",
            "encryption": {
                "services": {
                    "blob": { "enabled": true },
                    "file": { "enabled": true }
                },
                "keySource": "Microsoft.Storage"
            }
        },
        "dependsOn": []
    },
    {
        "comments": "Cluster Virtual Network",
        "apiVersion": "2018-08-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[variables('resourceGroupLocation')]",
        "properties":
            {
            "addressSpace": {
              "addressPrefixes": [
                "10.0.0.0/16"
              ]
            },
        "subnets": [
                {
                    "name": "docker",
                    "properties": {
                        "addressPrefix": "10.0.0.0/16"
                    }
                }
            ]
        }
    },
    {
        "apiVersion": "2018-08-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[concat('ucpmanager', '-nsg')]",
        "location": "[variables('resourceGroupLocation')]",
        "properties": {
            "securityRules": [{
                "name": "allowSSHin_all",
                "properties": {
                "description": "Allow SSH in from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
            }
        }, 
        {
            "name": "allowTCP179",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "179",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowHTTPS_all",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP2376_all",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "2376",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP2377_all",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "2377",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 500,
                "direction": "Inbound"
            }
        },
        
        {
            "name": "allowUDP4789",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "4789",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 600,
                "direction": "Inbound"
            }
        },
            {
                "name": "allowKube_all",
                "properties": {
                    "description": "Allow HTTPS connections from all locations",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "6443",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 700,
                    "direction": "Inbound"
                }
        },
        {
            "name": "allowTCP6444",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "6444",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 800,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP7946",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7946",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 900,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowUDP7946",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "7946",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority":1000,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP10250",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "10250",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1100,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12376",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12376",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1200,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12378",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12378",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1300,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12379",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12379",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1400,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12380",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12380",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1500,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12381",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12381",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1600,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12382",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12382",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1700,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12383",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12383",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1800,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12384",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12384",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1900,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12385",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12385",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2000,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12386",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12386",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2100,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12387",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12387",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2200,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12388",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12388",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2300,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP80",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2400,
                "direction": "Inbound"
            }
        }
    ]
    }
},
{
    "apiVersion": "2018-08-01",
    "type": "Microsoft.Network/networkSecurityGroups",
    "name": "[concat('dtr', '-nsg')]",
    "location": "[variables('resourceGroupLocation')]",
    "properties": {
        "securityRules": [{
            "name": "allowSSHin_all",
            "properties": {
                "description": "Allow SSH in from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
            }
        }, 
        {
            "name": "allowTCP179",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "179",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowHTTPS_all",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP2376_all",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "2376",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP2377_all",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "2377",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 500,
                "direction": "Inbound"
            }
        },
        
        {
            "name": "allowUDP4789",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "4789",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 600,
                "direction": "Inbound"
            }
        },
            {
                "name": "allowKube_all",
                "properties": {
                    "description": "Allow HTTPS connections from all locations",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "6443",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 700,
                    "direction": "Inbound"
                }
        },
        {
            "name": "allowTCP6444",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "6444",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 800,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP7946",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7946",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 900,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowUDP7946",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "7946",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority":1000,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP10250",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "10250",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1100,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12376",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12376",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1200,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12378",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12378",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1300,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12379",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12379",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1400,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12380",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12380",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1500,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12381",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12381",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1600,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12382",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12382",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1700,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12383",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12383",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1800,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12384",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12384",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1900,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12385",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12385",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2000,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12386",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12386",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2100,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12387",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12387",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2200,
                "direction": "Inbound"
            }
        },    
        {
            "name": "allowTCP12388",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12388",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2300,
                "direction": "Inbound"
            }
        }
    ]
    }
},
{
    "apiVersion": "[variables('apiVersion')]",
    "type": "Microsoft.Network/networkSecurityGroups",
    "name": "[concat('linuxWorkers', '-nsg')]",
    "location": "[variables('resourceGroupLocation')]",
    "properties": {
        "securityRules": [{
            "name": "allowSSHin_all",
            "properties": {
                "description": "Allow SSH in from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
            }
        }, {
            "name": "allowHTTPS_all",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowHTTP_all",
            "properties": {
                "description": "Allow HTTP connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP880_all",
            "properties": {
                "description": "Allow TCP-880 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "880",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP881_all",
            "properties": {
                "description": "Allow TCP-881 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "881",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 500,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP888_all",
            "properties": {
                "description": "Allow TCP-888 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "888",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 600,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP8080_all",
            "properties": {
                "description": "Allow TCP-8080 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 700,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP8088_all",
            "properties": {
                "description": "Allow TCP-8088 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8088",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 800,
                "direction": "Inbound"
            }
        },
        {
            "name": "GRAFANA-3000",
            "properties": {
                "description": "Allow 3000 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3000",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 900,
                "direction": "Inbound"
            }
        },
        {
            "name": "KIBANA-5601",
            "properties": {
                "description": "Allow 5601 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "5601",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound"
            }
        },
        {
            "name": "ALERT-MANAGER-9093",
            "properties": {
                "description": "Allow 9093 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "9093",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1100,
                "direction": "Inbound"
            }
        },
        {
            "name": "Direct-To-8082",
            "properties": {
                "description": "Allow 8082 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8082",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1200,
                "direction": "Inbound"
            }
        },
        {
            "name": "rdstowin",
            "properties": {
                "description": "Allow 3389 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1300,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP179",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "179",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1400,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowUDP4789",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "4789",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1500,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP6444",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "6444",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1600,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP7946",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7946",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1700,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowUDP7946",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "7946",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority":1800,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP10250",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "10250",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1900,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12376",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12376",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2000,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12378",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12378",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2100,
                "direction": "Inbound"
            }
        }
    ]
    }
},
{
    "apiVersion": "2018-08-01",
    "type": "Microsoft.Network/networkSecurityGroups",
    "name": "[concat('windowsWorkers', '-nsg')]",
    "location": "[variables('resourceGroupLocation')]",
    "properties": {
        "securityRules": [{
            "name": "allowSSHin_all",
            "properties": {
                "description": "Allow SSH in from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
            }
        }, {
            "name": "allowHTTPS_all",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowHTTP_all",
            "properties": {
                "description": "Allow HTTP connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP880_all",
            "properties": {
                "description": "Allow TCP-880 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "880",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP881_all",
            "properties": {
                "description": "Allow TCP-881 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "881",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 500,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP888_all",
            "properties": {
                "description": "Allow TCP-888 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "888",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 600,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP8080_all",
            "properties": {
                "description": "Allow TCP-8080 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 700,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP8088_all",
            "properties": {
                "description": "Allow TCP-8088 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8088",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 800,
                "direction": "Inbound"
            }
        },
        {
            "name": "GRAFANA-3000",
            "properties": {
                "description": "Allow 3000 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3000",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 900,
                "direction": "Inbound"
            }
        },
        {
            "name": "KIBANA-5601",
            "properties": {
                "description": "Allow 5601 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "5601",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound"
            }
        },
        {
            "name": "ALERT-MANAGER-9093",
            "properties": {
                "description": "Allow 9093 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "9093",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1100,
                "direction": "Inbound"
            }
        },
        {
            "name": "Direct-To-8082",
            "properties": {
                "description": "Allow 8082 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8082",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1200,
                "direction": "Inbound"
            }
        },
        {
            "name": "rdstowin",
            "properties": {
                "description": "Allow 3389 connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1300,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP179",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "179",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1400,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowUDP4789",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "4789",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1500,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP6444",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "6444",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1600,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP7946",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7946",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1700,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowUDP7946",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "7946",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority":1800,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP10250",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "10250",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1900,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12376",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12376",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2000,
                "direction": "Inbound"
            }
        },
        {
            "name": "allowTCP12378",
            "properties": {
                "description": "Allow HTTPS connections from all locations",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "12378",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2100,
                "direction": "Inbound"
            }
        }
    ]
    }
},
{
    "comments": "UCP Availability Set",
    "apiVersion": "2018-06-01",
    "type": "Microsoft.Compute/availabilitySets",
    "sku": {
        "name": "Aligned"
    },
    "name": "[variables('ucpAvailabilitySetName')]",
    "location": "[variables('resourceGroupLocation')]",
    "tags": {},
    "scale": null,
    "properties":
        {
        "platformUpdateDomainCount": 3,
        "platformFaultDomainCount": 3
        }
},
{
    "comments": "DTR Availability Set",
    "apiVersion": "2018-06-01",
    "type": "Microsoft.Compute/availabilitySets",
    "sku": {
        "name": "Aligned"
    },
    "name": "[variables('dtrAvailabilitySetName')]",
    "location": "[variables('resourceGroupLocation')]",
    "tags": {},
    "scale": null,
    "properties":
        {
        "platformUpdateDomainCount": 3,
        "platformFaultDomainCount": 3
        }
},
{
    "comments": "Cluster Availability Set",
    "apiVersion": "2018-06-01",
    "type": "Microsoft.Compute/availabilitySets",
    "sku": {
        "name": "Aligned"
    },
    "name": "[variables('clusterAvailabilitySetName')]",
    "location": "[variables('resourceGroupLocation')]",
    "tags": {},
    "scale": null,
    "properties":
        {
        "platformUpdateDomainCount": 3,
        "platformFaultDomainCount": 3
        }
},
{
          "comments": "UCP Public IP address",
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[variables('ucpPublicIPAddressName')]",
          "location": "[variables('resourceGroupLocation')]",
          "apiVersion": "2018-08-01",
          "scale": null,
          "properties": {
              "publicIPAllocationMethod": "Dynamic",
              "idleTimeoutInMinutes": 4,
              "dnsSettings": {
                  "domainNameLabel": "[variables('ucpPublicIPAddressLabel')]"
              }
          }
},
{
    "comments": "DTR Public IP address",
    "type": "Microsoft.Network/publicIPAddresses",
    "name": "[variables('dtrPublicIPAddressName')]",
    "location": "[variables('resourceGroupLocation')]",
    "apiVersion": "2018-08-01",
    "scale": null,
    "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
            "domainNameLabel": "[variables('dtrPublicIPAddressLabel')]"
        }
    }
},
{
    "comments": "Public IP address of the cluster",
    "type": "Microsoft.Network/publicIPAddresses",
    "name": "[variables('clusterLbPublicIPAddressName')]",
    "location": "[variables('resourceGroupLocation')]",
    "apiVersion": "2018-08-01",
    "scale": null,
    "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
            "domainNameLabel": "[variables('clusterPublicIPAddressLabel')]"
        }
    }
},
{
              "comments": "UCP Load Balancer",
              "apiVersion": "2018-08-01",
              "name": "[variables('ucpLbName')]",
              "type": "Microsoft.Network/loadBalancers",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                  "[concat('Microsoft.Network/publicIPAddresses/', variables('ucpPublicIPAddressName'))]"
              ],
              "properties": {
                  "frontendIPConfigurations": [
                      {
                          "name": "LoadBalancerFrontEnd",
                          "properties": {
                              "publicIPAddress": {
                                  "id" : "[resourceId('Microsoft.Network/publicIPAddresses', variables('ucpPublicIPAddressName'))]"
                              }
                          }
                      }
                  ],
                  "backendAddressPools": [
                      {
                          "name": "BackendServersPool"
                      }
                  ],
                  "probes": [
                      {
                          "name": "DockerDaemonProbe",
                          "properties": {
                              "protocol": "Tcp",
                              "port": 22,
                              "intervalInSeconds": 10,
                              "numberOfProbes": 2
                          }
                      }
                  ],
                                    "loadBalancingRules": [
                                        {
                                            "name": "ucpGUI",
                                            "properties": {
                                                "frontendIPConfiguration": { "id": "[variables('ucpLbFrontEndIPConfigID')]" },
                                                "frontendPort": 443,
                                                "backendPort": 443,
                                                "enableFloatingIP": false,
                                                "idleTimeoutInMinutes": 4,
                                                "protocol": "Tcp",
                                                "loadDistribution": "Default",
                                                "backendAddressPool": { "id": "[variables('ucpLbBackendAddressPoolID')]" },
                                                "probe": { "id": "[variables('ucpLbProbeID')]" }
                                            }
                                        },
                                        {
                                            "name": "port80",
                                            "properties": {
                                                "frontendIPConfiguration": { "id": "[variables('ucpLbFrontEndIPConfigID')]" },
                                                "frontendPort": 80,
                                                "backendPort": 80,
                                                "enableFloatingIP": false,
                                                "idleTimeoutInMinutes": 4,
                                                "protocol": "Tcp",
                                                "loadDistribution": "Default",
                                                "backendAddressPool": { "id": "[variables('ucpLbBackendAddressPoolID')]" },
                                                "probe": { "id": "[variables('ucpLbProbeID')]" }
                                            }
                                        },
                                        {
                                            "name": "kube",
                                            "properties": {
                                                "frontendIPConfiguration": { "id": "[variables('ucpLbFrontEndIPConfigID')]" },
                                                "frontendPort": 6443,
                                                "backendPort": 6443,
                                                "enableFloatingIP": false,
                                                "idleTimeoutInMinutes": 4,
                                                "protocol": "Tcp",
                                                "loadDistribution": "Default",
                                                "backendAddressPool": { "id": "[variables('ucpLbBackendAddressPoolID')]" },
                                                "probe": { "id": "[variables('ucpLbProbeID')]" }
                                            }
                                        }
                                    ],
                  "inboundNatRules": [
                    {
                      "name": "ucpSSH",
                      "properties": {
                        "frontendIPConfiguration": {
                          "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('ucpLbName')),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                        },
                        "protocol": "Tcp",
                        "frontendPort": 2222,
                        "backendPort": 22,
                        "enableFloatingIP": false
                      }
                    }
                  ]
              }
},
{
    "comments": "DTR Load Balancer",
    "apiVersion": "2018-08-01",
    "name": "[variables('dtrLbName')]",
    "type": "Microsoft.Network/loadBalancers",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('dtrPublicIPAddressName'))]"
    ],
    "properties": {
        "frontendIPConfigurations": [
            {
                "name": "LoadBalancerFrontEnd",
                "properties": {
                    "publicIPAddress": {
                        "id" : "[resourceId('Microsoft.Network/publicIPAddresses', variables('dtrPublicIPAddressName'))]"
                    }
                }
            }
        ],
        "backendAddressPools": [
            {
                "name": "BackendServersPool"
            }
        ],
        "probes": [
            {
                "name": "DockerDaemonProbe",
                "properties": {
                    "protocol": "Tcp",
                    "port": 22,
                    "intervalInSeconds": 10,
                    "numberOfProbes": 2
                }
            }
        ],
                          "loadBalancingRules": [
                              {
                                  "name": "dtrGUI",
                                  "properties": {
                                      "frontendIPConfiguration": { "id": "[variables('dtrLbFrontEndIPConfigID')]" },
                                      "frontendPort": 443,
                                      "backendPort": 443,
                                      "enableFloatingIP": false,
                                      "idleTimeoutInMinutes": 4,
                                      "protocol": "Tcp",
                                      "loadDistribution": "Default",
                                      "backendAddressPool": { "id": "[variables('dtrLbBackendAddressPoolID')]" },
                                      "probe": { "id": "[variables('dtrLbProbeID')]" }
                                  }
                              },
                          {
                              "name": "kube",
                              "properties": {
                                  "frontendIPConfiguration": { "id": "[variables('dtrLbFrontEndIPConfigID')]" },
                                  "frontendPort": 6443,
                                  "backendPort": 6443,
                                  "enableFloatingIP": false,
                                  "idleTimeoutInMinutes": 4,
                                  "protocol": "Tcp",
                                  "loadDistribution": "Default",
                                  "backendAddressPool": { "id": "[variables('dtrLbBackendAddressPoolID')]" },
                                  "probe": { "id": "[variables('dtrLbProbeID')]" }
                              }
                          }
                          ],
        "inboundNatRules": [
          {
            "name": "dtrSSH",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('dtrLbName')),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "protocol": "Tcp",
              "frontendPort": 2222,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          }
        ]
    }
},
{
    "comments": "Load Balancer of the Cluster",
    "apiVersion": "2018-08-01",
    "name": "[variables('clusterLbName')]",
    "type": "Microsoft.Network/loadBalancers",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('clusterLbPublicIPAddressName'))]"
    ],
    "properties": {
        "frontendIPConfigurations": [
            {
                "name": "LoadBalancerFrontEnd",
                "properties": {
                    "publicIPAddress": {
                        "id" : "[resourceId('Microsoft.Network/publicIPAddresses', variables('clusterLbPublicIPAddressName'))]"
                    }
                }
            }
        ],
        "backendAddressPools": [
            {
                "name": "BackendServersPool"
            }
        ],
        "probes": [
            {
                "name": "DockerDaemonProbe",
                "properties": {
                    "protocol": "Tcp",
                    "port": 22,
                    "intervalInSeconds": 10,
                    "numberOfProbes": 2
                }
            }
        ],
        "loadBalancingRules": [
            {
                "name": "HTTP",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 80,
                    "backendPort": 80,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            },
            {
                "name": "HTTPS",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 443,
                    "backendPort": 8443,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            },
            {
                "name": "TCP-880",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 880,
                    "backendPort": 880,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            },
            {
                "name": "TCP-881",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 881,
                    "backendPort": 881,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            },
            {
                "name": "TCP-888",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 888,
                    "backendPort": 888,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            },
            {
                "name": "TCP-8080",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 8080,
                    "backendPort": 8080,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            },
            {
                "name": "TCP-8088",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 8088,
                    "backendPort": 8088,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            },
            {
                "name": "GRAFANA-3000",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 3000,
                    "backendPort": 3000,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            },
            {
                "name": "KIBANA-5601",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 5601,
                    "backendPort": 5601,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            },
            {
                "name": "ALERT-MANAGER-9093",
                "properties": {
                    "frontendIPConfiguration": { "id": "[variables('clusterLbFrontEndIPConfigID')]" },
                    "frontendPort": 9093,
                    "backendPort": 9093,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": { "id": "[variables('clusterLbBackendAddressPoolID')]" },
                    "probe": { "id": "[variables('clusterLbProbeID')]" }
                }
            }
        ],
        "inboundNatRules": [
          {
            "name": "Direct-To-8082",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('clusterLbName')),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "protocol": "Tcp",
              "frontendPort": 8082,
              "backendPort": 8082,
              "enableFloatingIP": false
            }
          },
          {
            "name": "rdstowin1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('clusterLbName')),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "protocol": "Tcp",
              "frontendPort": 33189,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "rdstowin2",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('clusterLbName')),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "protocol": "Tcp",
              "frontendPort": 33289,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "rdstowin3",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('clusterLbName')),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "protocol": "Tcp",
              "frontendPort": 33389,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "rdstowin4",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('clusterLbName')),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "protocol": "Tcp",
              "frontendPort": 33489,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "rdstowin5",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('clusterLbName')),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "protocol": "Tcp",
              "frontendPort": 33589,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
    }
},
{
  "comments": "Network Interface for the UCP server",
  "apiVersion": "[variables('apiVersion')]",
  "type": "Microsoft.Network/networkInterfaces",
  "name": "ucpmanager1NIC",
  "location": "[variables('resourceGroupLocation')]",
  "dependsOn": [
      "[variables('vnetID')]",
      "[variables('ucpLbID')]",
      "[concat('Microsoft.Network/networkSecurityGroups/', 'ucpmanager', '-nsg')]"
  ],
  "properties": {
      "enableIPForwarding": true,
      "ipConfigurations": [{
          "name": "ipConfigNode1",
          "properties": {
            "primary": true,
              "privateIPAddress": "10.0.1.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                  "id": "[variables('dockersubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('ucpLbBackendAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                  {
                  "id": "[concat(variables('ucpLbID'),'/inboundNatRules/ucpSSH')]"
                  }
              ],
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'ucpmanager-nsg')]"
            }
          }
      },
      {
        "name": "ipConfigNode2",
        "properties": {
            "privateIPAddress": "10.0.1.5",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode3",
        "properties": {
            "privateIPAddress": "10.0.1.6",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode4",
        "properties": {
            "privateIPAddress": "10.0.1.7",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode5",
        "properties": {
            "privateIPAddress": "10.0.1.8",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode6",
        "properties": {
            "privateIPAddress": "10.0.1.9",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode7",
        "properties": {
            "privateIPAddress": "10.0.1.10",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode8",
        "properties": {
            "privateIPAddress": "10.0.1.11",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode9",
        "properties": {
            "privateIPAddress": "10.0.1.12",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode10",
        "properties": {
            "privateIPAddress": "10.0.1.13",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode11",
        "properties": {
            "privateIPAddress": "10.0.1.14",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode12",
        "properties": {
            "privateIPAddress": "10.0.1.15",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode13",
        "properties": {
            "privateIPAddress": "10.0.1.16",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode14",
        "properties": {
            "privateIPAddress": "10.0.1.17",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode15",
        "properties": {
            "privateIPAddress": "10.0.1.18",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode16",
        "properties": {
            "privateIPAddress": "10.0.1.19",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode17",
        "properties": {
            "privateIPAddress": "10.0.1.20",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode18",
        "properties": {
            "privateIPAddress": "10.0.1.21",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode19",
        "properties": {
            "privateIPAddress": "10.0.1.22",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode20",
        "properties": {
            "privateIPAddress": "10.0.1.23",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode21",
        "properties": {
            "privateIPAddress": "10.0.1.24",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
    "name": "ipConfigNode22",
    "properties": {
        "privateIPAddress": "10.0.1.25",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode23",
    "properties": {
        "privateIPAddress": "10.0.1.26",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode24",
    "properties": {
        "privateIPAddress": "10.0.1.27",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode25",
    "properties": {
        "privateIPAddress": "10.0.1.28",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode26",
    "properties": {
        "privateIPAddress": "10.0.1.29",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode27",
    "properties": {
        "privateIPAddress": "10.0.1.30",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode28",
    "properties": {
        "privateIPAddress": "10.0.1.31",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode29",
    "properties": {
        "privateIPAddress": "10.0.1.32",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode30",
    "properties": {
        "privateIPAddress": "10.0.1.33",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode31",
    "properties": {
        "privateIPAddress": "10.0.1.34",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode32",
    "properties": {
        "privateIPAddress": "10.0.1.35",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode33",
    "properties": {
        "privateIPAddress": "10.0.1.36",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode34",
    "properties": {
        "privateIPAddress": "10.0.1.37",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode35",
    "properties": {
        "privateIPAddress": "10.0.1.38",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode36",
    "properties": {
        "privateIPAddress": "10.0.1.39",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode37",
    "properties": {
        "privateIPAddress": "10.0.1.40",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode38",
    "properties": {
        "privateIPAddress": "10.0.1.41",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode39",
    "properties": {
        "privateIPAddress": "10.0.1.42",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode40",
    "properties": {
        "privateIPAddress": "10.0.1.43",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode41",
    "properties": {
        "privateIPAddress": "10.0.1.44",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode42",
    "properties": {
        "privateIPAddress": "10.0.1.45",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode43",
    "properties": {
        "privateIPAddress": "10.0.1.46",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode44",
    "properties": {
        "privateIPAddress": "10.0.1.47",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode45",
    "properties": {
        "privateIPAddress": "10.0.1.48",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode46",
    "properties": {
        "privateIPAddress": "10.0.1.49",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode47",
    "properties": {
        "privateIPAddress": "10.0.1.50",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode48",
    "properties": {
        "privateIPAddress": "10.0.1.51",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode49",
    "properties": {
        "privateIPAddress": "10.0.1.52",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode50",
    "properties": {
        "privateIPAddress": "10.0.1.53",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode51",
    "properties": {
        "privateIPAddress": "10.0.1.54",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode52",
    "properties": {
        "privateIPAddress": "10.0.1.55",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode53",
    "properties": {
        "privateIPAddress": "10.0.1.56",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode54",
    "properties": {
        "privateIPAddress": "10.0.1.57",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode55",
    "properties": {
        "privateIPAddress": "10.0.1.58",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode56",
    "properties": {
        "privateIPAddress": "10.0.1.59",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode57",
    "properties": {
        "privateIPAddress": "10.0.1.60",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode58",
    "properties": {
        "privateIPAddress": "10.0.1.61",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode59",
    "properties": {
        "privateIPAddress": "10.0.1.62",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode60",
    "properties": {
        "privateIPAddress": "10.0.1.63",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
    "name": "ipConfigNode61",
    "properties": {
        "privateIPAddress": "10.0.1.64",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
},
{
"name": "ipConfigNode62",
"properties": {
    "privateIPAddress": "10.0.1.65",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode63",
"properties": {
    "privateIPAddress": "10.0.1.66",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode64",
"properties": {
    "privateIPAddress": "10.0.1.67",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode65",
"properties": {
    "privateIPAddress": "10.0.1.68",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode66",
"properties": {
    "privateIPAddress": "10.0.1.69",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode67",
"properties": {
    "privateIPAddress": "10.0.1.70",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode68",
"properties": {
    "privateIPAddress": "10.0.1.71",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode69",
"properties": {
    "privateIPAddress": "10.0.1.72",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode70",
"properties": {
    "privateIPAddress": "10.0.1.73",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode71",
"properties": {
    "privateIPAddress": "10.0.1.74",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode72",
"properties": {
    "privateIPAddress": "10.0.1.75",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode73",
"properties": {
    "privateIPAddress": "10.0.1.76",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode74",
"properties": {
    "privateIPAddress": "10.0.1.77",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode75",
"properties": {
    "privateIPAddress": "10.0.1.78",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode76",
"properties": {
    "privateIPAddress": "10.0.1.79",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode77",
"properties": {
    "privateIPAddress": "10.0.1.80",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode78",
"properties": {
    "privateIPAddress": "10.0.1.81",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode79",
"properties": {
    "privateIPAddress": "10.0.1.82",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode80",
"properties": {
    "privateIPAddress": "10.0.1.83",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
},
{
"name": "ipConfigNode81",
"properties": {
    "privateIPAddress": "10.0.1.84",
    "privateIPAllocationMethod": "Static",
    "subnet": {
        "id": "[variables('dockersubnetRef')]"
    }
}
}
    ]
  }
},
{
    "comments": "Network Interface for the DTR server",
    "apiVersion": "[variables('apiVersion')]",
    "type": "Microsoft.Network/networkInterfaces",
    "name": "[variables('dtrNicName')]",
    "location": "[variables('resourceGroupLocation')]",
    "dependsOn": [
        "[variables('vnetID')]",
        "[variables('dtrLbID')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', 'dtr', '-nsg')]",
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('ucpNicName'), '1NIC'))]"
    ],
    "properties": {
      "enableIPForwarding": true,
        "ipConfigurations": [{
            "name": "ipConfigNode",
            "properties": {
                "primary": true,
                "privateIPAddress": "10.0.2.4",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[variables('dtrLbBackendAddressPoolID')]"
                  }
                ],
                "loadBalancerInboundNatRules":
                  [
                    {
                    "id": "[concat(variables('dtrLbID'),'/inboundNatRules/dtrssh')]"
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('dtr', '-nsg'))]"
                }
            }
        },
        {
            "name": "ipConfigNode2",
            "properties": {
                "privateIPAddress": "10.0.2.5",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode3",
            "properties": {
                "privateIPAddress": "10.0.2.6",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode4",
            "properties": {
                "privateIPAddress": "10.0.2.7",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode5",
            "properties": {
                "privateIPAddress": "10.0.2.8",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode6",
            "properties": {
                "privateIPAddress": "10.0.2.9",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode7",
            "properties": {
                "privateIPAddress": "10.0.2.10",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode8",
            "properties": {
                "privateIPAddress": "10.0.2.11",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode9",
            "properties": {
                "privateIPAddress": "10.0.2.12",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode10",
            "properties": {
                "privateIPAddress": "10.0.2.13",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode11",
            "properties": {
                "privateIPAddress": "10.0.2.14",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode12",
            "properties": {
                "privateIPAddress": "10.0.2.15",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode13",
            "properties": {
                "privateIPAddress": "10.0.2.16",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode14",
            "properties": {
                "privateIPAddress": "10.0.2.17",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode15",
            "properties": {
                "privateIPAddress": "10.0.2.18",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode16",
            "properties": {
                "privateIPAddress": "10.0.2.19",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode17",
            "properties": {
                "privateIPAddress": "10.0.2.20",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode18",
            "properties": {
                "privateIPAddress": "10.0.2.21",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode19",
            "properties": {
                "privateIPAddress": "10.0.2.22",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode20",
            "properties": {
                "privateIPAddress": "10.0.2.23",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode21",
            "properties": {
                "privateIPAddress": "10.0.2.24",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
        "name": "ipConfigNode22",
        "properties": {
            "privateIPAddress": "10.0.2.25",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode23",
        "properties": {
            "privateIPAddress": "10.0.2.26",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode24",
        "properties": {
            "privateIPAddress": "10.0.2.27",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode25",
        "properties": {
            "privateIPAddress": "10.0.2.28",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode26",
        "properties": {
            "privateIPAddress": "10.0.2.29",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode27",
        "properties": {
            "privateIPAddress": "10.0.2.30",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode28",
        "properties": {
            "privateIPAddress": "10.0.2.31",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode29",
        "properties": {
            "privateIPAddress": "10.0.2.32",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode30",
        "properties": {
            "privateIPAddress": "10.0.2.33",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode31",
        "properties": {
            "privateIPAddress": "10.0.2.34",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode32",
        "properties": {
            "privateIPAddress": "10.0.2.35",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode33",
        "properties": {
            "privateIPAddress": "10.0.2.36",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode34",
        "properties": {
            "privateIPAddress": "10.0.2.37",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode35",
        "properties": {
            "privateIPAddress": "10.0.2.38",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode36",
        "properties": {
            "privateIPAddress": "10.0.2.39",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode37",
        "properties": {
            "privateIPAddress": "10.0.2.40",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode38",
        "properties": {
            "privateIPAddress": "10.0.2.41",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode39",
        "properties": {
            "privateIPAddress": "10.0.2.42",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode40",
        "properties": {
            "privateIPAddress": "10.0.2.43",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode41",
        "properties": {
            "privateIPAddress": "10.0.2.44",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode42",
        "properties": {
            "privateIPAddress": "10.0.2.45",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode43",
        "properties": {
            "privateIPAddress": "10.0.2.46",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode44",
        "properties": {
            "privateIPAddress": "10.0.2.47",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode45",
        "properties": {
            "privateIPAddress": "10.0.2.48",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode46",
        "properties": {
            "privateIPAddress": "10.0.2.49",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode47",
        "properties": {
            "privateIPAddress": "10.0.2.50",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode48",
        "properties": {
            "privateIPAddress": "10.0.2.51",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode49",
        "properties": {
            "privateIPAddress": "10.0.2.52",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode50",
        "properties": {
            "privateIPAddress": "10.0.2.53",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode51",
        "properties": {
            "privateIPAddress": "10.0.2.54",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode52",
        "properties": {
            "privateIPAddress": "10.0.2.55",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode53",
        "properties": {
            "privateIPAddress": "10.0.2.56",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode54",
        "properties": {
            "privateIPAddress": "10.0.2.57",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode55",
        "properties": {
            "privateIPAddress": "10.0.2.58",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode56",
        "properties": {
            "privateIPAddress": "10.0.2.59",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode57",
        "properties": {
            "privateIPAddress": "10.0.2.60",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode58",
        "properties": {
            "privateIPAddress": "10.0.2.61",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode59",
        "properties": {
            "privateIPAddress": "10.0.2.62",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode60",
        "properties": {
            "privateIPAddress": "10.0.2.63",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode61",
        "properties": {
            "privateIPAddress": "10.0.2.64",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
    "name": "ipConfigNode62",
    "properties": {
        "privateIPAddress": "10.0.2.65",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode63",
    "properties": {
        "privateIPAddress": "10.0.2.66",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode64",
    "properties": {
        "privateIPAddress": "10.0.2.67",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode65",
    "properties": {
        "privateIPAddress": "10.0.2.68",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode66",
    "properties": {
        "privateIPAddress": "10.0.2.69",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode67",
    "properties": {
        "privateIPAddress": "10.0.2.70",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode68",
    "properties": {
        "privateIPAddress": "10.0.2.71",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode69",
    "properties": {
        "privateIPAddress": "10.0.2.72",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode70",
    "properties": {
        "privateIPAddress": "10.0.2.73",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode71",
    "properties": {
        "privateIPAddress": "10.0.2.74",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode72",
    "properties": {
        "privateIPAddress": "10.0.2.75",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode73",
    "properties": {
        "privateIPAddress": "10.0.2.76",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode74",
    "properties": {
        "privateIPAddress": "10.0.2.77",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode75",
    "properties": {
        "privateIPAddress": "10.0.2.78",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode76",
    "properties": {
        "privateIPAddress": "10.0.2.79",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode77",
    "properties": {
        "privateIPAddress": "10.0.2.80",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode78",
    "properties": {
        "privateIPAddress": "10.0.2.81",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode79",
    "properties": {
        "privateIPAddress": "10.0.2.82",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode80",
    "properties": {
        "privateIPAddress": "10.0.2.83",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode81",
    "properties": {
        "privateIPAddress": "10.0.2.84",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    }
    ]
    }
  },
{
    "comments": "Network Interface for the extra Linux manager",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "ucpmanager2NIC",
      "condition": "[equals(variables('extramanager'), 'true')]",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
          "[variables('vnetID')]",
          "[variables('ucpLbID')]",
          "[concat('Microsoft.Network/networkSecurityGroups/', 'ucpmanager', '-nsg')]"
      ],
      "properties": {
        "enableIPForwarding": true,
          "ipConfigurations": [{
              "name": "ipConfigNode1",
              "properties": {
                  "primary": true,
                  "privateIPAddress": "10.0.3.4",
                  "privateIPAllocationMethod": "Static",
                  "subnet": {
                      "id": "[variables('dockersubnetRef')]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('ucpLbBackendAddressPoolID')]"
                    }
                  ],
                  "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('ucpmanager', '-nsg'))]"
                  }
              }
          },
          {
            "name": "ipConfigNode2",
            "properties": {
                "privateIPAddress": "10.0.3.5",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode3",
            "properties": {
                "privateIPAddress": "10.0.3.6",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode4",
            "properties": {
                "privateIPAddress": "10.0.3.7",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode5",
            "properties": {
                "privateIPAddress": "10.0.3.8",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode6",
            "properties": {
                "privateIPAddress": "10.0.3.9",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode7",
            "properties": {
                "privateIPAddress": "10.0.3.10",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode8",
            "properties": {
                "privateIPAddress": "10.0.3.11",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode9",
            "properties": {
                "privateIPAddress": "10.0.3.12",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode10",
            "properties": {
                "privateIPAddress": "10.0.3.13",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode11",
            "properties": {
                "privateIPAddress": "10.0.3.14",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode12",
            "properties": {
                "privateIPAddress": "10.0.3.15",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode13",
            "properties": {
                "privateIPAddress": "10.0.3.16",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode14",
            "properties": {
                "privateIPAddress": "10.0.3.17",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode15",
            "properties": {
                "privateIPAddress": "10.0.3.18",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode16",
            "properties": {
                "privateIPAddress": "10.0.3.19",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode17",
            "properties": {
                "privateIPAddress": "10.0.3.20",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode18",
            "properties": {
                "privateIPAddress": "10.0.3.21",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode19",
            "properties": {
                "privateIPAddress": "10.0.3.22",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode20",
            "properties": {
                "privateIPAddress": "10.0.3.23",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode21",
            "properties": {
                "privateIPAddress": "10.0.3.24",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
        "name": "ipConfigNode22",
        "properties": {
            "privateIPAddress": "10.0.3.25",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode23",
        "properties": {
            "privateIPAddress": "10.0.3.26",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode24",
        "properties": {
            "privateIPAddress": "10.0.3.27",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode25",
        "properties": {
            "privateIPAddress": "10.0.3.28",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode26",
        "properties": {
            "privateIPAddress": "10.0.3.29",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode27",
        "properties": {
            "privateIPAddress": "10.0.3.30",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode28",
        "properties": {
            "privateIPAddress": "10.0.3.31",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode29",
        "properties": {
            "privateIPAddress": "10.0.3.32",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode30",
        "properties": {
            "privateIPAddress": "10.0.3.33",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode31",
        "properties": {
            "privateIPAddress": "10.0.3.34",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode32",
        "properties": {
            "privateIPAddress": "10.0.3.35",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode33",
        "properties": {
            "privateIPAddress": "10.0.3.36",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode34",
        "properties": {
            "privateIPAddress": "10.0.3.37",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode35",
        "properties": {
            "privateIPAddress": "10.0.3.38",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode36",
        "properties": {
            "privateIPAddress": "10.0.3.39",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode37",
        "properties": {
            "privateIPAddress": "10.0.3.40",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode38",
        "properties": {
            "privateIPAddress": "10.0.3.41",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode39",
        "properties": {
            "privateIPAddress": "10.0.3.42",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode40",
        "properties": {
            "privateIPAddress": "10.0.3.43",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode41",
        "properties": {
            "privateIPAddress": "10.0.3.44",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode42",
        "properties": {
            "privateIPAddress": "10.0.3.45",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode43",
        "properties": {
            "privateIPAddress": "10.0.3.46",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode44",
        "properties": {
            "privateIPAddress": "10.0.3.47",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode45",
        "properties": {
            "privateIPAddress": "10.0.3.48",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode46",
        "properties": {
            "privateIPAddress": "10.0.3.49",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode47",
        "properties": {
            "privateIPAddress": "10.0.3.50",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode48",
        "properties": {
            "privateIPAddress": "10.0.3.51",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode49",
        "properties": {
            "privateIPAddress": "10.0.3.52",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode50",
        "properties": {
            "privateIPAddress": "10.0.3.53",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode51",
        "properties": {
            "privateIPAddress": "10.0.3.54",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode52",
        "properties": {
            "privateIPAddress": "10.0.3.55",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode53",
        "properties": {
            "privateIPAddress": "10.0.3.56",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode54",
        "properties": {
            "privateIPAddress": "10.0.3.57",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode55",
        "properties": {
            "privateIPAddress": "10.0.3.58",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode56",
        "properties": {
            "privateIPAddress": "10.0.3.59",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode57",
        "properties": {
            "privateIPAddress": "10.0.3.60",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode58",
        "properties": {
            "privateIPAddress": "10.0.3.61",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode59",
        "properties": {
            "privateIPAddress": "10.0.3.62",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode60",
        "properties": {
            "privateIPAddress": "10.0.3.63",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode61",
        "properties": {
            "privateIPAddress": "10.0.3.64",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
    "name": "ipConfigNode62",
    "properties": {
        "privateIPAddress": "10.0.3.65",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode63",
    "properties": {
        "privateIPAddress": "10.0.3.66",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode64",
    "properties": {
        "privateIPAddress": "10.0.3.67",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode65",
    "properties": {
        "privateIPAddress": "10.0.3.68",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode66",
    "properties": {
        "privateIPAddress": "10.0.3.69",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode67",
    "properties": {
        "privateIPAddress": "10.0.3.70",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode68",
    "properties": {
        "privateIPAddress": "10.0.3.71",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode69",
    "properties": {
        "privateIPAddress": "10.0.3.72",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode70",
    "properties": {
        "privateIPAddress": "10.0.3.73",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode71",
    "properties": {
        "privateIPAddress": "10.0.3.74",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode72",
    "properties": {
        "privateIPAddress": "10.0.3.75",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode73",
    "properties": {
        "privateIPAddress": "10.0.3.76",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode74",
    "properties": {
        "privateIPAddress": "10.0.3.77",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode75",
    "properties": {
        "privateIPAddress": "10.0.3.78",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode76",
    "properties": {
        "privateIPAddress": "10.0.3.79",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode77",
    "properties": {
        "privateIPAddress": "10.0.3.80",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode78",
    "properties": {
        "privateIPAddress": "10.0.3.81",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode79",
    "properties": {
        "privateIPAddress": "10.0.3.82",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode80",
    "properties": {
        "privateIPAddress": "10.0.3.83",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode81",
    "properties": {
        "privateIPAddress": "10.0.3.84",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    }
        ]
      }
  },
  {
    "comments": "Network Interface for the Linux workers",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "linuxWorker1NIC",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
          "[variables('vnetID')]",
          "[variables('clusterLbID')]",
          "[concat('Microsoft.Network/networkSecurityGroups/', 'linuxWorkers', '-nsg')]"
      ],
      "properties": {
          "enableIPForwarding": true,
          "ipConfigurations": [{
              "name": "ipConfigNode1",
              "properties": {
                  "primary": true, 
                  "privateIPAddress": "10.0.4.4",
                  "privateIPAllocationMethod": "Static",
                  "subnet": {
                      "id": "[variables('dockersubnetRef')]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('clusterLbBackendAddressPoolID')]"
                    }
                  ],
                  "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('linuxWorkers', '-nsg'))]"
                  }
              }
          },
          {
            "name": "ipConfigNode2",
            "properties": {
                "privateIPAddress": "10.0.4.5",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode3",
            "properties": {
                "privateIPAddress": "10.0.4.6",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode4",
            "properties": {
                "privateIPAddress": "10.0.4.7",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode5",
            "properties": {
                "privateIPAddress": "10.0.4.8",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode6",
            "properties": {
                "privateIPAddress": "10.0.4.9",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode7",
            "properties": {
                "privateIPAddress": "10.0.4.10",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode8",
            "properties": {
                "privateIPAddress": "10.0.4.11",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode9",
            "properties": {
                "privateIPAddress": "10.0.4.12",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode10",
            "properties": {
                "privateIPAddress": "10.0.4.13",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode11",
            "properties": {
                "privateIPAddress": "10.0.4.14",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode12",
            "properties": {
                "privateIPAddress": "10.0.4.15",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode13",
            "properties": {
                "privateIPAddress": "10.0.4.16",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode14",
            "properties": {
                "privateIPAddress": "10.0.4.17",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode15",
            "properties": {
                "privateIPAddress": "10.0.4.18",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode16",
            "properties": {
                "privateIPAddress": "10.0.4.19",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode17",
            "properties": {
                "privateIPAddress": "10.0.4.20",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode18",
            "properties": {
                "privateIPAddress": "10.0.4.21",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode19",
            "properties": {
                "privateIPAddress": "10.0.4.22",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode20",
            "properties": {
                "privateIPAddress": "10.0.4.23",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode21",
            "properties": {
                "privateIPAddress": "10.0.4.24",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
        "name": "ipConfigNode22",
        "properties": {
            "privateIPAddress": "10.0.4.25",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode23",
        "properties": {
            "privateIPAddress": "10.0.4.26",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode24",
        "properties": {
            "privateIPAddress": "10.0.4.27",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode25",
        "properties": {
            "privateIPAddress": "10.0.4.28",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode26",
        "properties": {
            "privateIPAddress": "10.0.4.29",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode27",
        "properties": {
            "privateIPAddress": "10.0.4.30",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode28",
        "properties": {
            "privateIPAddress": "10.0.4.31",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode29",
        "properties": {
            "privateIPAddress": "10.0.4.32",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode30",
        "properties": {
            "privateIPAddress": "10.0.4.33",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode31",
        "properties": {
            "privateIPAddress": "10.0.4.34",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode32",
        "properties": {
            "privateIPAddress": "10.0.4.35",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode33",
        "properties": {
            "privateIPAddress": "10.0.4.36",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode34",
        "properties": {
            "privateIPAddress": "10.0.4.37",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode35",
        "properties": {
            "privateIPAddress": "10.0.4.38",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode36",
        "properties": {
            "privateIPAddress": "10.0.4.39",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode37",
        "properties": {
            "privateIPAddress": "10.0.4.40",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode38",
        "properties": {
            "privateIPAddress": "10.0.4.41",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode39",
        "properties": {
            "privateIPAddress": "10.0.4.42",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode40",
        "properties": {
            "privateIPAddress": "10.0.4.43",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode41",
        "properties": {
            "privateIPAddress": "10.0.4.44",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode42",
        "properties": {
            "privateIPAddress": "10.0.4.45",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode43",
        "properties": {
            "privateIPAddress": "10.0.4.46",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode44",
        "properties": {
            "privateIPAddress": "10.0.4.47",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode45",
        "properties": {
            "privateIPAddress": "10.0.4.48",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode46",
        "properties": {
            "privateIPAddress": "10.0.4.49",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode47",
        "properties": {
            "privateIPAddress": "10.0.4.50",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode48",
        "properties": {
            "privateIPAddress": "10.0.4.51",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode49",
        "properties": {
            "privateIPAddress": "10.0.4.52",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode50",
        "properties": {
            "privateIPAddress": "10.0.4.53",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode51",
        "properties": {
            "privateIPAddress": "10.0.4.54",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode52",
        "properties": {
            "privateIPAddress": "10.0.4.55",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode53",
        "properties": {
            "privateIPAddress": "10.0.4.56",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode54",
        "properties": {
            "privateIPAddress": "10.0.4.57",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode55",
        "properties": {
            "privateIPAddress": "10.0.4.58",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode56",
        "properties": {
            "privateIPAddress": "10.0.4.59",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode57",
        "properties": {
            "privateIPAddress": "10.0.4.60",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode58",
        "properties": {
            "privateIPAddress": "10.0.4.61",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode59",
        "properties": {
            "privateIPAddress": "10.0.4.62",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode60",
        "properties": {
            "privateIPAddress": "10.0.4.63",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode61",
        "properties": {
            "privateIPAddress": "10.0.4.64",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
    "name": "ipConfigNode62",
    "properties": {
        "privateIPAddress": "10.0.4.65",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode63",
    "properties": {
        "privateIPAddress": "10.0.4.66",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode64",
    "properties": {
        "privateIPAddress": "10.0.4.67",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode65",
    "properties": {
        "privateIPAddress": "10.0.4.68",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode66",
    "properties": {
        "privateIPAddress": "10.0.4.69",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode67",
    "properties": {
        "privateIPAddress": "10.0.4.70",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode68",
    "properties": {
        "privateIPAddress": "10.0.4.71",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode69",
    "properties": {
        "privateIPAddress": "10.0.4.72",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode70",
    "properties": {
        "privateIPAddress": "10.0.4.73",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode71",
    "properties": {
        "privateIPAddress": "10.0.4.74",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode72",
    "properties": {
        "privateIPAddress": "10.0.4.75",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode73",
    "properties": {
        "privateIPAddress": "10.0.4.76",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode74",
    "properties": {
        "privateIPAddress": "10.0.4.77",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode75",
    "properties": {
        "privateIPAddress": "10.0.4.78",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode76",
    "properties": {
        "privateIPAddress": "10.0.4.79",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode77",
    "properties": {
        "privateIPAddress": "10.0.4.80",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode78",
    "properties": {
        "privateIPAddress": "10.0.4.81",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode79",
    "properties": {
        "privateIPAddress": "10.0.4.82",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode80",
    "properties": {
        "privateIPAddress": "10.0.4.83",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode81",
    "properties": {
        "privateIPAddress": "10.0.4.84",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    }
        ]
      }
  },
  {
    "comments": "Network Interface for the Linux workers",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "linuxWorker2NIC",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
          "[variables('vnetID')]",
          "[variables('clusterLbID')]",
          "[concat('Microsoft.Network/networkSecurityGroups/', 'linuxWorkers', '-nsg')]"
      ],
      "properties": {
          "enableIPForwarding": true,
          "ipConfigurations": [{
              "name": "ipConfigNode1",
              "properties": {
                  "primary": true, 
                  "privateIPAddress": "10.0.5.4",
                  "privateIPAllocationMethod": "Static",
                  "subnet": {
                      "id": "[variables('dockersubnetRef')]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('clusterLbBackendAddressPoolID')]"
                    }
                  ],
                  "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('linuxWorkers', '-nsg'))]"
                  }
              }
          },
          {
            "name": "ipConfigNode2",
            "properties": {
                "privateIPAddress": "10.0.5.5",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode3",
            "properties": {
                "privateIPAddress": "10.0.5.6",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode4",
            "properties": {
                "privateIPAddress": "10.0.5.7",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode5",
            "properties": {
                "privateIPAddress": "10.0.5.8",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode6",
            "properties": {
                "privateIPAddress": "10.0.5.9",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode7",
            "properties": {
                "privateIPAddress": "10.0.5.10",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode8",
            "properties": {
                "privateIPAddress": "10.0.5.11",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode9",
            "properties": {
                "privateIPAddress": "10.0.5.12",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode10",
            "properties": {
                "privateIPAddress": "10.0.5.13",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode11",
            "properties": {
                "privateIPAddress": "10.0.5.14",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode12",
            "properties": {
                "privateIPAddress": "10.0.5.15",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode13",
            "properties": {
                "privateIPAddress": "10.0.5.16",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode14",
            "properties": {
                "privateIPAddress": "10.0.5.17",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode15",
            "properties": {
                "privateIPAddress": "10.0.5.18",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode16",
            "properties": {
                "privateIPAddress": "10.0.5.19",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode17",
            "properties": {
                "privateIPAddress": "10.0.5.20",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode18",
            "properties": {
                "privateIPAddress": "10.0.5.21",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode19",
            "properties": {
                "privateIPAddress": "10.0.5.22",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode20",
            "properties": {
                "privateIPAddress": "10.0.5.23",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode21",
            "properties": {
                "privateIPAddress": "10.0.5.24",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
        "name": "ipConfigNode22",
        "properties": {
            "privateIPAddress": "10.0.5.25",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode23",
        "properties": {
            "privateIPAddress": "10.0.5.26",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode24",
        "properties": {
            "privateIPAddress": "10.0.5.27",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode25",
        "properties": {
            "privateIPAddress": "10.0.5.28",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode26",
        "properties": {
            "privateIPAddress": "10.0.5.29",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode27",
        "properties": {
            "privateIPAddress": "10.0.5.30",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode28",
        "properties": {
            "privateIPAddress": "10.0.5.31",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode29",
        "properties": {
            "privateIPAddress": "10.0.5.32",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode30",
        "properties": {
            "privateIPAddress": "10.0.5.33",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode31",
        "properties": {
            "privateIPAddress": "10.0.5.34",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode32",
        "properties": {
            "privateIPAddress": "10.0.5.35",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode33",
        "properties": {
            "privateIPAddress": "10.0.5.36",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode34",
        "properties": {
            "privateIPAddress": "10.0.5.37",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode35",
        "properties": {
            "privateIPAddress": "10.0.5.38",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode36",
        "properties": {
            "privateIPAddress": "10.0.5.39",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode37",
        "properties": {
            "privateIPAddress": "10.0.5.40",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode38",
        "properties": {
            "privateIPAddress": "10.0.5.41",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode39",
        "properties": {
            "privateIPAddress": "10.0.5.42",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode40",
        "properties": {
            "privateIPAddress": "10.0.5.43",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode41",
        "properties": {
            "privateIPAddress": "10.0.5.44",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode42",
        "properties": {
            "privateIPAddress": "10.0.5.45",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode43",
        "properties": {
            "privateIPAddress": "10.0.5.46",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode44",
        "properties": {
            "privateIPAddress": "10.0.5.47",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode45",
        "properties": {
            "privateIPAddress": "10.0.5.48",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode46",
        "properties": {
            "privateIPAddress": "10.0.5.49",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode47",
        "properties": {
            "privateIPAddress": "10.0.5.50",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode48",
        "properties": {
            "privateIPAddress": "10.0.5.51",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode49",
        "properties": {
            "privateIPAddress": "10.0.5.52",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode50",
        "properties": {
            "privateIPAddress": "10.0.5.53",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode51",
        "properties": {
            "privateIPAddress": "10.0.5.54",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode52",
        "properties": {
            "privateIPAddress": "10.0.5.55",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode53",
        "properties": {
            "privateIPAddress": "10.0.5.56",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode54",
        "properties": {
            "privateIPAddress": "10.0.5.57",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode55",
        "properties": {
            "privateIPAddress": "10.0.5.58",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode56",
        "properties": {
            "privateIPAddress": "10.0.5.59",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode57",
        "properties": {
            "privateIPAddress": "10.0.5.60",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode58",
        "properties": {
            "privateIPAddress": "10.0.5.61",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode59",
        "properties": {
            "privateIPAddress": "10.0.5.62",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode60",
        "properties": {
            "privateIPAddress": "10.0.5.63",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode61",
        "properties": {
            "privateIPAddress": "10.0.5.64",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
    "name": "ipConfigNode62",
    "properties": {
        "privateIPAddress": "10.0.5.65",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode63",
    "properties": {
        "privateIPAddress": "10.0.5.66",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode64",
    "properties": {
        "privateIPAddress": "10.0.5.67",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode65",
    "properties": {
        "privateIPAddress": "10.0.5.68",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode66",
    "properties": {
        "privateIPAddress": "10.0.5.69",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode67",
    "properties": {
        "privateIPAddress": "10.0.5.70",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode68",
    "properties": {
        "privateIPAddress": "10.0.5.71",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode69",
    "properties": {
        "privateIPAddress": "10.0.5.72",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode70",
    "properties": {
        "privateIPAddress": "10.0.5.73",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode71",
    "properties": {
        "privateIPAddress": "10.0.5.74",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode72",
    "properties": {
        "privateIPAddress": "10.0.5.75",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode73",
    "properties": {
        "privateIPAddress": "10.0.5.76",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode74",
    "properties": {
        "privateIPAddress": "10.0.5.77",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode75",
    "properties": {
        "privateIPAddress": "10.0.5.78",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode76",
    "properties": {
        "privateIPAddress": "10.0.5.79",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode77",
    "properties": {
        "privateIPAddress": "10.0.5.80",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode78",
    "properties": {
        "privateIPAddress": "10.0.5.81",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode79",
    "properties": {
        "privateIPAddress": "10.0.5.82",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode80",
    "properties": {
        "privateIPAddress": "10.0.5.83",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode81",
    "properties": {
        "privateIPAddress": "10.0.5.84",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    }
        ]
      }
  },
  {
    "comments": "Network Interface for the Linux workers",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "linuxWorker3NIC",
      "condition": "[equals(variables('extramanager'), 'true')]",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
          "[variables('vnetID')]",
          "[variables('clusterLbID')]",
          "[concat('Microsoft.Network/networkSecurityGroups/', 'linuxWorkers', '-nsg')]"
      ],
      "properties": {
          "enableIPForwarding": true,
          "ipConfigurations": [{
              "name": "ipConfigNode1",
              "properties": {
                  "primary": true, 
                  "privateIPAddress": "10.0.6.4",
                  "privateIPAllocationMethod": "Static",
                  "subnet": {
                      "id": "[variables('dockersubnetRef')]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('clusterLbBackendAddressPoolID')]"
                    }
                  ],
                  "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('linuxWorkers', '-nsg'))]"
                  }
              }
          },
          {
            "name": "ipConfigNode2",
            "properties": {
                "privateIPAddress": "10.0.6.5",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode3",
            "properties": {
                "privateIPAddress": "10.0.6.6",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode4",
            "properties": {
                "privateIPAddress": "10.0.6.7",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode5",
            "properties": {
                "privateIPAddress": "10.0.6.8",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode6",
            "properties": {
                "privateIPAddress": "10.0.6.9",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode7",
            "properties": {
                "privateIPAddress": "10.0.6.10",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode8",
            "properties": {
                "privateIPAddress": "10.0.6.11",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode9",
            "properties": {
                "privateIPAddress": "10.0.6.12",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode10",
            "properties": {
                "privateIPAddress": "10.0.6.13",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode11",
            "properties": {
                "privateIPAddress": "10.0.6.14",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode12",
            "properties": {
                "privateIPAddress": "10.0.6.15",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode13",
            "properties": {
                "privateIPAddress": "10.0.6.16",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode14",
            "properties": {
                "privateIPAddress": "10.0.6.17",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode15",
            "properties": {
                "privateIPAddress": "10.0.6.18",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode16",
            "properties": {
                "privateIPAddress": "10.0.6.19",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode17",
            "properties": {
                "privateIPAddress": "10.0.6.20",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode18",
            "properties": {
                "privateIPAddress": "10.0.6.21",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode19",
            "properties": {
                "privateIPAddress": "10.0.6.22",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode20",
            "properties": {
                "privateIPAddress": "10.0.6.23",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode21",
            "properties": {
                "privateIPAddress": "10.0.6.24",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
        "name": "ipConfigNode22",
        "properties": {
            "privateIPAddress": "10.0.6.25",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode23",
        "properties": {
            "privateIPAddress": "10.0.6.26",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode24",
        "properties": {
            "privateIPAddress": "10.0.6.27",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode25",
        "properties": {
            "privateIPAddress": "10.0.6.28",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode26",
        "properties": {
            "privateIPAddress": "10.0.6.29",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode27",
        "properties": {
            "privateIPAddress": "10.0.6.30",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode28",
        "properties": {
            "privateIPAddress": "10.0.6.31",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode29",
        "properties": {
            "privateIPAddress": "10.0.6.32",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode30",
        "properties": {
            "privateIPAddress": "10.0.6.33",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode31",
        "properties": {
            "privateIPAddress": "10.0.6.34",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode32",
        "properties": {
            "privateIPAddress": "10.0.6.35",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode33",
        "properties": {
            "privateIPAddress": "10.0.6.36",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode34",
        "properties": {
            "privateIPAddress": "10.0.6.37",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode35",
        "properties": {
            "privateIPAddress": "10.0.6.38",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode36",
        "properties": {
            "privateIPAddress": "10.0.6.39",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode37",
        "properties": {
            "privateIPAddress": "10.0.6.40",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode38",
        "properties": {
            "privateIPAddress": "10.0.6.41",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode39",
        "properties": {
            "privateIPAddress": "10.0.6.42",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode40",
        "properties": {
            "privateIPAddress": "10.0.6.43",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode41",
        "properties": {
            "privateIPAddress": "10.0.6.44",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode42",
        "properties": {
            "privateIPAddress": "10.0.6.45",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode43",
        "properties": {
            "privateIPAddress": "10.0.6.46",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode44",
        "properties": {
            "privateIPAddress": "10.0.6.47",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode45",
        "properties": {
            "privateIPAddress": "10.0.6.48",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode46",
        "properties": {
            "privateIPAddress": "10.0.6.49",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode47",
        "properties": {
            "privateIPAddress": "10.0.6.50",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode48",
        "properties": {
            "privateIPAddress": "10.0.6.51",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode49",
        "properties": {
            "privateIPAddress": "10.0.6.52",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode50",
        "properties": {
            "privateIPAddress": "10.0.6.53",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode51",
        "properties": {
            "privateIPAddress": "10.0.6.54",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode52",
        "properties": {
            "privateIPAddress": "10.0.6.55",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode53",
        "properties": {
            "privateIPAddress": "10.0.6.56",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode54",
        "properties": {
            "privateIPAddress": "10.0.6.57",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode55",
        "properties": {
            "privateIPAddress": "10.0.6.58",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode56",
        "properties": {
            "privateIPAddress": "10.0.6.59",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode57",
        "properties": {
            "privateIPAddress": "10.0.6.60",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode58",
        "properties": {
            "privateIPAddress": "10.0.6.61",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode59",
        "properties": {
            "privateIPAddress": "10.0.6.62",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode60",
        "properties": {
            "privateIPAddress": "10.0.6.63",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode61",
        "properties": {
            "privateIPAddress": "10.0.6.64",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
    "name": "ipConfigNode62",
    "properties": {
        "privateIPAddress": "10.0.6.65",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode63",
    "properties": {
        "privateIPAddress": "10.0.6.66",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode64",
    "properties": {
        "privateIPAddress": "10.0.6.67",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode65",
    "properties": {
        "privateIPAddress": "10.0.6.68",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode66",
    "properties": {
        "privateIPAddress": "10.0.6.69",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode67",
    "properties": {
        "privateIPAddress": "10.0.6.70",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode68",
    "properties": {
        "privateIPAddress": "10.0.6.71",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode69",
    "properties": {
        "privateIPAddress": "10.0.6.72",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode70",
    "properties": {
        "privateIPAddress": "10.0.6.73",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode71",
    "properties": {
        "privateIPAddress": "10.0.6.74",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode72",
    "properties": {
        "privateIPAddress": "10.0.6.75",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode73",
    "properties": {
        "privateIPAddress": "10.0.6.76",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode74",
    "properties": {
        "privateIPAddress": "10.0.6.77",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode75",
    "properties": {
        "privateIPAddress": "10.0.6.78",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode76",
    "properties": {
        "privateIPAddress": "10.0.6.79",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode77",
    "properties": {
        "privateIPAddress": "10.0.6.80",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode78",
    "properties": {
        "privateIPAddress": "10.0.6.81",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode79",
    "properties": {
        "privateIPAddress": "10.0.6.82",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode80",
    "properties": {
        "privateIPAddress": "10.0.6.83",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode81",
    "properties": {
        "privateIPAddress": "10.0.6.84",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    }
        ]
      }
  },
  {
    "comments": "Network Interface for the Linux workers",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "linuxWorker4NIC",
      "condition": "[equals(variables('extramanager'), 'true')]",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
          "[variables('vnetID')]",
          "[variables('clusterLbID')]",
          "[concat('Microsoft.Network/networkSecurityGroups/', 'linuxWorkers', '-nsg')]"
      ],
      "properties": {
          "enableIPForwarding": true,
          "ipConfigurations": [{
              "name": "ipConfigNode1",
              "properties": {
                  "primary": true, 
                  "privateIPAddress": "10.0.7.4",
                  "privateIPAllocationMethod": "Static",
                  "subnet": {
                      "id": "[variables('dockersubnetRef')]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('clusterLbBackendAddressPoolID')]"
                    }
                  ],
                  "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('linuxWorkers', '-nsg'))]"
                  }
              }
          },
          {
            "name": "ipConfigNode2",
            "properties": {
                "privateIPAddress": "10.0.7.5",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode3",
            "properties": {
                "privateIPAddress": "10.0.7.6",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode4",
            "properties": {
                "privateIPAddress": "10.0.7.7",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode5",
            "properties": {
                "privateIPAddress": "10.0.7.8",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode6",
            "properties": {
                "privateIPAddress": "10.0.7.9",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode7",
            "properties": {
                "privateIPAddress": "10.0.7.10",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode8",
            "properties": {
                "privateIPAddress": "10.0.7.11",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode9",
            "properties": {
                "privateIPAddress": "10.0.7.12",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode10",
            "properties": {
                "privateIPAddress": "10.0.7.13",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode11",
            "properties": {
                "privateIPAddress": "10.0.7.14",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode12",
            "properties": {
                "privateIPAddress": "10.0.7.15",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode13",
            "properties": {
                "privateIPAddress": "10.0.7.16",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode14",
            "properties": {
                "privateIPAddress": "10.0.7.17",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode15",
            "properties": {
                "privateIPAddress": "10.0.7.18",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode16",
            "properties": {
                "privateIPAddress": "10.0.7.19",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode17",
            "properties": {
                "privateIPAddress": "10.0.7.20",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode18",
            "properties": {
                "privateIPAddress": "10.0.7.21",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode19",
            "properties": {
                "privateIPAddress": "10.0.7.22",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode20",
            "properties": {
                "privateIPAddress": "10.0.7.23",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
            "name": "ipConfigNode21",
            "properties": {
                "privateIPAddress": "10.0.7.24",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                }
            }
        },
        {
        "name": "ipConfigNode22",
        "properties": {
            "privateIPAddress": "10.0.7.25",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode23",
        "properties": {
            "privateIPAddress": "10.0.7.26",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode24",
        "properties": {
            "privateIPAddress": "10.0.7.27",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode25",
        "properties": {
            "privateIPAddress": "10.0.7.28",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode26",
        "properties": {
            "privateIPAddress": "10.0.7.29",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode27",
        "properties": {
            "privateIPAddress": "10.0.7.30",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode28",
        "properties": {
            "privateIPAddress": "10.0.7.31",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode29",
        "properties": {
            "privateIPAddress": "10.0.7.32",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode30",
        "properties": {
            "privateIPAddress": "10.0.7.33",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode31",
        "properties": {
            "privateIPAddress": "10.0.7.34",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode32",
        "properties": {
            "privateIPAddress": "10.0.7.35",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode33",
        "properties": {
            "privateIPAddress": "10.0.7.36",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode34",
        "properties": {
            "privateIPAddress": "10.0.7.37",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode35",
        "properties": {
            "privateIPAddress": "10.0.7.38",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode36",
        "properties": {
            "privateIPAddress": "10.0.7.39",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode37",
        "properties": {
            "privateIPAddress": "10.0.7.40",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode38",
        "properties": {
            "privateIPAddress": "10.0.7.41",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode39",
        "properties": {
            "privateIPAddress": "10.0.7.42",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode40",
        "properties": {
            "privateIPAddress": "10.0.7.43",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode41",
        "properties": {
            "privateIPAddress": "10.0.7.44",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode42",
        "properties": {
            "privateIPAddress": "10.0.7.45",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode43",
        "properties": {
            "privateIPAddress": "10.0.7.46",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode44",
        "properties": {
            "privateIPAddress": "10.0.7.47",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode45",
        "properties": {
            "privateIPAddress": "10.0.7.48",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode46",
        "properties": {
            "privateIPAddress": "10.0.7.49",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode47",
        "properties": {
            "privateIPAddress": "10.0.7.50",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode48",
        "properties": {
            "privateIPAddress": "10.0.7.51",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode49",
        "properties": {
            "privateIPAddress": "10.0.7.52",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode50",
        "properties": {
            "privateIPAddress": "10.0.7.53",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode51",
        "properties": {
            "privateIPAddress": "10.0.7.54",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode52",
        "properties": {
            "privateIPAddress": "10.0.7.55",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode53",
        "properties": {
            "privateIPAddress": "10.0.7.56",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode54",
        "properties": {
            "privateIPAddress": "10.0.7.57",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode55",
        "properties": {
            "privateIPAddress": "10.0.7.58",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode56",
        "properties": {
            "privateIPAddress": "10.0.7.59",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode57",
        "properties": {
            "privateIPAddress": "10.0.7.60",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode58",
        "properties": {
            "privateIPAddress": "10.0.7.61",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode59",
        "properties": {
            "privateIPAddress": "10.0.7.62",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode60",
        "properties": {
            "privateIPAddress": "10.0.7.63",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
        "name": "ipConfigNode61",
        "properties": {
            "privateIPAddress": "10.0.7.64",
            "privateIPAllocationMethod": "Static",
            "subnet": {
                "id": "[variables('dockersubnetRef')]"
            }
        }
    },
    {
    "name": "ipConfigNode62",
    "properties": {
        "privateIPAddress": "10.0.7.65",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode63",
    "properties": {
        "privateIPAddress": "10.0.7.66",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode64",
    "properties": {
        "privateIPAddress": "10.0.7.67",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode65",
    "properties": {
        "privateIPAddress": "10.0.7.68",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode66",
    "properties": {
        "privateIPAddress": "10.0.7.69",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode67",
    "properties": {
        "privateIPAddress": "10.0.7.70",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode68",
    "properties": {
        "privateIPAddress": "10.0.7.71",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode69",
    "properties": {
        "privateIPAddress": "10.0.7.72",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode70",
    "properties": {
        "privateIPAddress": "10.0.7.73",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode71",
    "properties": {
        "privateIPAddress": "10.0.7.74",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode72",
    "properties": {
        "privateIPAddress": "10.0.7.75",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode73",
    "properties": {
        "privateIPAddress": "10.0.7.76",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode74",
    "properties": {
        "privateIPAddress": "10.0.7.77",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode75",
    "properties": {
        "privateIPAddress": "10.0.7.78",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode76",
    "properties": {
        "privateIPAddress": "10.0.7.79",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode77",
    "properties": {
        "privateIPAddress": "10.0.7.80",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode78",
    "properties": {
        "privateIPAddress": "10.0.7.81",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode79",
    "properties": {
        "privateIPAddress": "10.0.7.82",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode80",
    "properties": {
        "privateIPAddress": "10.0.7.83",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    },
    {
    "name": "ipConfigNode81",
    "properties": {
        "privateIPAddress": "10.0.7.84",
        "privateIPAllocationMethod": "Static",
        "subnet": {
            "id": "[variables('dockersubnetRef')]"
        }
    }
    }
        ]
      }
  },
  {
    "comments": "Network Interface for the Windows workers",
    "apiVersion": "[variables('apiVersion')]",
    "type": "Microsoft.Network/networkInterfaces",
    "name": "[concat(variables('windowsWorkerVMNamePrefix'), copyIndex(1),'NIC')]",
    "location": "[variables('resourceGroupLocation')]",
    "copy": {
        "name": "nicLoopNode",
        "count": "[variables('windowsWorkerCount')]"
    },
    "dependsOn": [
        "[variables('vnetID')]",
        "[variables('clusterLbID')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', 'windowsWorkers', '-nsg')]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('dtrNicName'))]"
    ],
    "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [{
            "name": "ipConfigNode",
            "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                    "id": "[variables('dockersubnetRef')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[variables('clusterLbBackendAddressPoolID')]"
                  }
                ],
                "loadBalancerInboundNatRules":
                  [
                    {
                    "id": "[concat(variables('clusterLbID'),'/inboundNatRules/rdstowin',copyIndex(1))]"
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('windowsWorkers', '-nsg'))]"
                }
            }
        }]
    }
},
 {
              "comments": "UCP Virtual Machine",
              "apiVersion": "2018-06-01",
              "type": "Microsoft.Compute/virtualMachines",
              "name": "ucpmanager1",
              "location": "[resourceGroup().location]",
              "tags": {
                  "Orchestrator": "Kubernetes:1.11.7"
              },
              "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('ucpAvailabilitySetName'))]"
                },
                  "hardwareProfile": {
                    "vmSize": "[variables('managerVMSize')]"
                  },
                  "storageProfile": {
                      "imageReference": {
                          "publisher": "Canonical",
                          "offer": "UbuntuServer",
                          "sku": "16.04-LTS",
                          "version": "latest"
                      },
                      "osDisk": {
                          "osType": "Linux",
                          "name": "ucpmanager1-osdisk",
                          "createOption": "FromImage",
                          "caching": "ReadWrite",
                          "diskSizeGB": 64,
                          "managedDisk": {
                              "storageAccountType": "Premium_LRS"
                          }
                      },
                      "dataDisks": []
                  },
                  "osProfile": {
                      "computerName": "ucpmanager1",
                      "adminUsername": "[variables('AdminUserid')]",
                      "adminPassword": "[variables('AdminPassword')]",
                      "linuxConfiguration": {
                          "disablePasswordAuthentication": false,
                          "ssh": {
                              "publicKeys": [{
                                  "path": "[variables('sshKeyPath')]",
                                  "keyData": "[variables('sshRSAPublicKey')]"
                              }]
                          }
                      }
                  },
                  "networkProfile": {
                      "networkInterfaces": [
                          {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('ucpNicName'), '1NIC'))]"
                          }
                      ]
                  },
                  "diagnosticsProfile": {
                      "bootDiagnostics": {
                          "enabled": true,
                          "storageUri": "[variables('diagstorageUri')]"
                      }
                  }
              },
              "dependsOn": ["[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                  "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('ucpNicName'), '1NIC'))]"
              ]
    },
    {
        "comments": "DTR Virtual Machine",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "dtrManager",
        "apiVersion": "2018-06-01",
        "location": "[resourceGroup().location]",
        "tags": {
            "Orchestrator": "Kubernetes:1.11.7"
        },
        "scale": null,
        "properties": {
          "availabilitySet": {
              "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('dtrAvailabilitySetName'))]"
          },
            "hardwareProfile": {
              "vmSize": "[variables('managerVMSize')]"
            },
            "storageProfile": {
                "imageReference": {
                  "publisher": "Canonical",
                  "offer": "UbuntuServer",
                  "sku": "16.04-LTS",
                  "version": "latest"                      
                },
                "osDisk": {
                    "osType": "Linux",
                    "name": "dtrmanager-osdisk",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "diskSizeGB": 512,
                    "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                },
                "dataDisks": []
            },
            "osProfile": {
                "computerName": "dtrmanager",
                "adminUsername": "[variables('AdminUserid')]",
                "adminPassword": "[variables('AdminPassword')]",
                "linuxConfiguration": {
                    "disablePasswordAuthentication": false,
                    "ssh": {
                        "publicKeys": [{
                            "path": "[variables('sshKeyPath')]",
                            "keyData": "[variables('sshRSAPublicKey')]"
                        }]
                    }
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('dtrNicName'))]"
                    }
                ]
            },
            "diagnosticsProfile": {
                "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[variables('diagstorageUri')]"
                }
            }
        },
        "dependsOn": ["[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "[resourceId('Microsoft.Network/networkInterfaces',variables('dtrNicName'))]"
        ]
},
{
    "comments": "Linux Workers Virtual Machines",
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[concat(variables('linuxWorkerVMNamePrefix'), copyIndex(1))]",
    "apiVersion": "2018-06-01",
    "tags": {
        "Orchestrator": "Kubernetes:1.11.7"
    },
    "location": "[resourceGroup().location]",
    "scale": null,
    "copy": {
        "name": "vmLoopNode",
        "count": "[variables('linuxWorkerCount')]"
    },
    "properties": {
      "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('clusterAvailabilitySetName'))]"
      },
        "hardwareProfile": {
          "vmSize": "[variables('workerVMSize')]"
        },
        "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04-LTS",
              "version": "latest"                          },
            "osDisk": {
                "osType": "Linux",
                "name": "[concat(variables('linuxWorkerVMNamePrefix'), copyIndex(1),'-osdisk')]",
                "createOption": "FromImage",
                "caching": "ReadWrite",
                "diskSizeGB": 64,
                "managedDisk": {
                    "storageAccountType": "Premium_LRS"
                }
            },
            "dataDisks": []
        },
        "osProfile": {
            "computername": "[concat(variables('linuxWorkerVMNamePrefix'), copyIndex(1))]",
            "adminUsername": "[variables('AdminUserid')]",
            "adminPassword": "[variables('AdminPassword')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": false,
                "ssh": {
                    "publicKeys": [{
                        "path": "[variables('sshKeyPath')]",
                        "keyData": "[variables('sshRSAPublicKey')]"
                    }]
                }
            }
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('linuxWorkerVMNamePrefix'), copyIndex(1), 'NIC'))]"
                }
            ]
        },
        "diagnosticsProfile": {
            "bootDiagnostics": {
                "enabled": true,
                "storageUri": "[variables('diagstorageUri')]"
            }
        }
    },
    "dependsOn": ["[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('linuxWorkerVMNamePrefix'), copyIndex(1), 'NIC')]"
    ]
},
{
    "comments": "Windows Worker Virtual Machines",
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[concat(variables('windowsWorkerVMNamePrefix'), copyIndex(1))]",
    "apiVersion": "2018-06-01",
    "location": "[resourceGroup().location]",
    "scale": null,
    "copy": {
        "name": "vmLoopNode",
        "count": "[variables('windowsWorkerCount')]"
    },
    "properties": {
      "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('clusterAvailabilitySetName'))]"
      },
        "hardwareProfile": {
          "vmSize": "[variables('workerVMSize')]"
        },
        "storageProfile": {
          "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter-with-Containers",
              "version": "2016.127.20181010"
          },
            "osDisk": {
                "osType": "Windows",
                "name": "[concat(variables('windowsWorkerVMNamePrefix'), copyIndex(1),'-osdisk')]",
                "createOption": "FromImage",
                "caching": "ReadWrite",
                "diskSizeGB": 128,
                "managedDisk": {
                    "storageAccountType": "Premium_LRS"
                }
            },
            "dataDisks": []
        },
        "osProfile": {
            "computername": "[concat(variables('windowsWorkerVMNamePrefix'), copyIndex(1))]",
            "adminUsername": "[variables('AdminUserid')]",
            "adminPassword": "[variables('AdminPassword')]",
            "windowsConfiguration": {
                 "provisionVMAgent": true,
                 "enableAutomaticUpdates": true
                 }
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('windowsWorkerVMNamePrefix'), copyIndex(1), 'NIC'))]"
                }
            ]
        },
        "diagnosticsProfile": {
            "bootDiagnostics": {
                "enabled": true,
                "storageUri": "[variables('diagstorageUri')]"
            }
        }
    },
    "dependsOn":
        ["[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('windowsWorkerVMNamePrefix'), copyIndex(1), 'NIC')]"
    ]
  },
  {
    "comments": "Extra Linux Managers Virtual Machines",
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[concat('ucpmanager', copyIndex(2))]",
    "condition": "[equals(variables('extramanager'), 'true')]",
    "apiVersion": "2018-06-01",
    "tags": {
        "Orchestrator": "Kubernetes:1.11.7"
    },
    "location": "[resourceGroup().location]",
    "copy": {
        "name": "managervmLoopNode",
        "count": "[variables('managerextraCount')]"
    },
    "properties": {
      "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('ucpAvailabilitySetName'))]"
      },
        "hardwareProfile": {
          "vmSize": "[variables('managerVMSize')]"
        },
        "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04-LTS",
              "version": "latest"                          },
            "osDisk": {
                "osType": "Linux",
                "name": "[concat('ucpmanager', copyIndex(2),'-osdisk')]",
                "createOption": "FromImage",
                "caching": "ReadWrite",
                "diskSizeGB": 64,
                "managedDisk": {
                    "storageAccountType": "Premium_LRS"
                }
            },
            "dataDisks": []
        },
        "osProfile": {
            "computername": "[concat('ucpmanager', copyIndex(2))]",
            "adminUsername": "[variables('AdminUserid')]",
            "adminPassword": "[variables('AdminPassword')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": false,
                "ssh": {
                    "publicKeys": [{
                        "path": "[variables('sshKeyPath')]",
                        "keyData": "[variables('sshRSAPublicKey')]"
                    }]
                }
            }
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('ucpNicName'), copyIndex(2), 'NIC'))]"
                }
            ]
        },
        "diagnosticsProfile": {
            "bootDiagnostics": {
                "enabled": true,
                "storageUri": "[variables('diagstorageUri')]"
            }
        }
    },
    "dependsOn": ["[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('ucpNicName'), copyIndex(2), 'NIC')]",
        "Microsoft.Compute/virtualMachines/dtrManager/extensions/dtrInstallation",
        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('windowsWorkerVMNamePrefix'), copyIndex(1)), '/extensions/scriptextension')]"
    ]
},
    {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "ucpmanager1/ucpInstallation",
        "location": "[resourceGroup().location]",
        "apiVersion": "2018-06-01",
        "dependsOn": ["Microsoft.Compute/virtualMachines/ucpmanager1",
                      "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
                     ],
        "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
          "settings": {},
        "protectedSettings": {
            "fileUris": [
              "[concat(variables('artifactBaseUri'), 'jq-1.5-1.el7.x86_64.rpm')]",
              "[concat(variables('artifactBaseUri'), 'linux-install-dockereeucp.sh')]"
            ],
            "commandToExecute": "[concat('bash ', variables('linux-install-dockereeucp'), ' ', variables('storageAccountName'), ' ', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ' ', variables('ucpuri'), ' ', variables('singlequote'), parameters('License'), variables('singlequote'), ' ', variables('clusterUri'), ' ', variables('dtruri'), ' ', variables('AdminUserid'), ' ', variables('AdminPassword'), ' ', variables('dockerEEDownloadURL'), ' ', parameters('aadClientId'), ' ', variables('tenantId'), ' ', variables('subscriptionId'), ' ', parameters('aadClientSecret'), ' ', variables('resourceGroupLocation'), ' ', variables('resourceGroupName'), ' ', variables('singlequote'), parameters('sshPrivateKey'), variables('singlequote'))]"
        }
        }
    },
    {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "dtrManager/dtrInstallation",
        "location": "[resourceGroup().location]",
        "apiVersion": "2018-06-01",
        "dependsOn": [
              "Microsoft.Compute/virtualMachines/dtrManager",
              "Microsoft.Compute/virtualMachines/ucpmanager1/extensions/ucpInstallation"
              ],
        "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
          "settings": {},
        "protectedSettings": {
            "fileUris": [
              "[concat(variables('artifactBaseUri'), 'linux-install-dockeree.sh')]",
              "[concat(variables('artifactBaseUri'), 'linux-join-swarm.sh')]",
              "[concat(variables('artifactBaseUri'), 'jq-1.5-1.el7.x86_64.rpm')]",
              "[concat(variables('artifactBaseUri'), 'linux-install-dtr.sh')]"
            ],
            "commandToExecute": "[concat('export UCP_PUBLIC_FQDN=', variables('ucpuri'), '; export DTR_PUBLIC_FQDN=', variables('dtruri'), '; export AZURE_TENANT_ID=', variables('tenantID'), '; export AZURE_SUBSCRIPTION_ID=', variables('subscriptionID'), '; export AZURE_CLIENT_ID=', parameters('aadClientID'), '; export AZURE_CLIENT_SECRET=', parameters('aadClientSecret'), '; export RGNAME=', variables('resourceGroupName'), '; export LOCATION=', variables('resourceGroupLocation'), '; export UCP_ADMIN_USERID=', variables('AdminUserid'), '; export UCP_ADMIN_PASSWORD=', variables('AdminPassword'), ';export DOCKEREE_DOWNLOAD_URL=', variables('dockerEEDownloadURL'), '; ./linux-install-dockeree.sh; ./linux-join-swarm.sh; ./linux-install-dtr.sh;')]"
        }
       }
    },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('linuxWorkerVMNamePrefix'), copyIndex(1), '/scriptextension')]",
            "copy": {
              "name":"linuxVMExtensionLoop",
              "count":"[variables('linuxWorkerCount')]"
            },
            "location": "[resourceGroup().location]",
            "apiVersion": "2018-06-01",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', concat(variables('linuxWorkerVMNamePrefix'), copyIndex(1)))]",
                "Microsoft.Compute/virtualMachines/ucpmanager1/extensions/ucpInstallation"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
              "settings": {},
            "protectedSettings": {
                "fileUris": [
                  "[concat(variables('artifactBaseUri'), 'linux-install-dockeree.sh')]",
                  "[concat(variables('artifactBaseUri'), 'jq-1.5-1.el7.x86_64.rpm')]",
                  "[concat(variables('artifactBaseUri'), 'linux-join-swarm.sh')]"
                ],
                "commandToExecute": "[concat('export UCP_PUBLIC_FQDN=', variables('ucpuri'), '; export AZURE_TENANT_ID=', variables('tenantID'), '; export AZURE_SUBSCRIPTION_ID=', variables('subscriptionID'), '; export AZURE_CLIENT_ID=', parameters('aadClientID'), '; export AZURE_CLIENT_SECRET=', parameters('aadClientSecret'), '; export RGNAME=', variables('resourceGroupName'), '; export LOCATION=', variables('resourceGroupLocation'), '; export DTR_PUBLIC_FQDN=', variables('dtruri'), '; export UCP_ADMIN_USERID=', variables('AdminUserid'), '; export UCP_ADMIN_PASSWORD=', variables('AdminPassword'), ';export DOCKEREE_DOWNLOAD_URL=', variables('dockerEEDownloadURL'), '; ./linux-install-dockeree.sh; ./linux-join-swarm.sh;')]"
              
            }
           }
        },
                    {
                        "apiVersion": "2018-06-01",
                        "type": "Microsoft.Compute/virtualMachines/extensions",
                        "name": "[concat(variables('windowsWorkerVMNamePrefix'), copyIndex(1), '/scriptextension')]",
                        "copy": {
                          "name":"windowsVMExtensionLoop",
                          "count":"[variables('windowsWorkerCount')]"
                        },
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[concat('Microsoft.Compute/virtualMachines/', concat(variables('windowsWorkerVMNamePrefix'), copyIndex(1)))]",
                          "Microsoft.Compute/virtualMachines/ucpmanager1/extensions/ucpInstallation",
                          "Microsoft.Compute/virtualMachines/dtrManager/extensions/dtrInstallation"
                        ],
                        "properties": {
                          "publisher": "Microsoft.Compute",
                          "type": "CustomScriptExtension",
                          "typeHandlerVersion": "1.9",
                          "autoUpgradeMinorVersion": true,
                          "settings": {
                            "fileUris": [
                                "[concat(variables('artifactBaseUri'), 'windows-install-join-worker.ps1')]",
                                "[concat(variables('artifactBaseUri'), 'copy_certs.ps1')]",
                                "[concat(variables('artifactBaseUri'), 'MTA-Commands.txt')]"
                              ]
                              },
                        "protectedSettings": {
                           
                          "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File windows-install-join-worker.ps1 -USERNAME ', variables('AdminUserid'), ' -PASSWORD ', variables('AdminPassword'), ' -UCPURI ',variables('ucpUri'), ' -DTRURI ', variables('dtruri'), ' -SWARMMGRIP ', variables('swarmMgrIP'))]"
                        }
                      }
                    },

        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('ucpNicName'), copyIndex(2), '/managerscriptextension')]",
            "condition": "[equals(variables('extramanager'), 'true')]",
            "copy": {
                "name":"managerVMExtensionLoop",
                "count":"[variables('managerextraCount')]"
            },
            "location": "[resourceGroup().location]",
            "apiVersion": "2018-06-01",
            "dependsOn": [
                "managervmLoopNode",
                "Microsoft.Compute/virtualMachines/ucpmanager1/extensions/ucpInstallation"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {},
                "protectedSettings": {
                    "fileUris": [
                        "[concat(variables('artifactBaseUri'), 'linux-install-dockeree.sh')]",
                        "[concat(variables('artifactBaseUri'), 'jq-1.5-1.el7.x86_64.rpm')]",
                        "[concat(variables('artifactBaseUri'), 'linux-join-manager.sh')]"
                    ],
                "commandToExecute": "[concat('export UCP_PUBLIC_FQDN=', variables('ucpuri'), '; export DTR_PUBLIC_FQDN=', variables('dtruri'), '; export AZURE_TENANT_ID=', variables('tenantID'), '; export AZURE_SUBSCRIPTION_ID=', variables('subscriptionID'), '; export AZURE_CLIENT_ID=', parameters('aadClientID'), '; export AZURE_CLIENT_SECRET=', parameters('aadClientSecret'), '; export RGNAME=', variables('resourceGroupName'), '; export LOCATION=', variables('resourceGroupLocation'), '; export UCP_ADMIN_USERID=', variables('AdminUserid'), '; export UCP_ADMIN_PASSWORD=', variables('AdminPassword'), ';export DOCKEREE_DOWNLOAD_URL=', variables('dockerEEDownloadURL'), '; ./linux-install-dockeree.sh; ./linux-join-manager.sh;')]"
                }
            }
        }
    ]
}